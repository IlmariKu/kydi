service: kydi-chat-api

plugins:
  - serverless-python-requirements

pythonRequirements:
  dockerizePip: true

provider:
  name: aws
  runtime: python3.8
  region: eu-central-1
  role: resBackendRole

  environment:
    stage: ${paramEnvId}
    chatTable: ${chatTable}
    indexName: ${indexName}

    VAULT_BUCKET:
      StackRef:
        region: {Ref: 'AWS::Region'}
        stackName: vault
        paramName: vaultBucketName
    VAULT_KEY:
      StackRef:
        region: {Ref: 'AWS::Region'}
        stackName: vault
        paramName: kmsKeyArn

functions:
  postChatMessages:
    description: Post new customer chat messages to database.
    handler: post_chat_messages.handler
    events:
      - http:
         path: post-chat-messages
         method: POST
  getChatMessages:
    description: Get customer chat messages to database.
    handler: get_chat_messages.handler
    events:
      - http:
         path: get-chat-messages
         method: GET

resources:
  Resources:
    resBackendRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - StackRef: {region: {Ref: 'AWS::Region'}, stackName: vault, paramName: decryptPolicy}
          - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        Policies:
          - PolicyName: allowDynamo
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "dynamodb:GetItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Query"
                  Resource:
                    - arn:aws:dynamodb:${REGION}:${ACCOUNT_ID}:table/${chatTable}
                    - arn:aws:dynamodb:${REGION}:${ACCOUNT_ID}:table/${chatTable}/index/*
    reviewDb:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${chatTable}
        AttributeDefinitions:
          - AttributeName: ${indexName}
            AttributeType: S
        KeySchema:
          - AttributeName: ${indexName}
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 1
